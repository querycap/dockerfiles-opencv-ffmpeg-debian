name: gocv
"on":
  push:
    paths:
      - .github/workflows/gocv-pure.yml
      - build/gocv/gocv-pure.Dockerfile
      - build/gocv/.version
      - build/gocv/Makefile
jobs:
  gocv-amd64:
    runs-on:
      - ubuntu-latest
    defaults:
      run:
        working-directory: build/gocv
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/login-action@v1
        name: Login ghcr.io
        with:
          password: ${{ secrets.CR_PAT }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
      - uses: docker/login-action@v1
        name: Login docker.io
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
      - id: prepare
        name: prepare
        run: |-
          if [[ ${{ github.ref }} != "refs/heads/master" ]]; then
            export TAG=temp-${{ github.sha }}
          fi
          make prepare
      - uses: docker/build-push-action@v2
        name: push onbuild
        with:
          target: onbuild
          build-args: ${{ steps.prepare.outputs.build_args }}
          context: build/gocv
          file: build/gocv/gocv-pure.Dockerfile
          labels: |-
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |-
            ghcr.io/querycap/${{ steps.prepare.outputs.image }}-onbuild-amd64
            docker.io/querycap/${{ steps.prepare.outputs.image }}-onbuild-amd64
      - uses: docker/build-push-action@v2
        name: push runtime
        with:
          target: runtime
          build-args: ${{ steps.prepare.outputs.build_args }}
          context: build/gocv
          file: build/gocv/gocv-pure.Dockerfile
          labels: |-
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |-
            ghcr.io/querycap/${{ steps.prepare.outputs.image }}-runtime-amd64
            docker.io/querycap/${{ steps.prepare.outputs.image }}-runtime-amd64
  gocv-arm64:
    runs-on:
      - self-hosted
      - linux
      - ARM64
    defaults:
      run:
        working-directory: build/gocv
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - uses: docker/login-action@v1
        name: Login ghcr.io
        with:
          password: ${{ secrets.CR_PAT }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
      - uses: docker/login-action@v1
        name: Login docker.io
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
      - id: prepare
        name: prepare
        run: |-
          if [[ ${{ github.ref }} != "refs/heads/master" ]]; then
            export TAG=temp-${{ github.sha }}
          fi
          make prepare
      - uses: docker/build-push-action@v2
        name: push onbuild
        with:
          target: onbuild
          build-args: ${{ steps.prepare.outputs.build_args }}
          context: build/gocv
          file: build/gocv/gocv-pure.Dockerfile
          labels: |-
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |-
            ghcr.io/querycap/${{ steps.prepare.outputs.image }}-onbuild-arm64
            docker.io/querycap/${{ steps.prepare.outputs.image }}-onbuild-arm64
      - uses: docker/build-push-action@v2
        name: push runtime
        with:
          target: runtime
          build-args: ${{ steps.prepare.outputs.build_args }}
          context: build/gocv
          file: build/gocv/gocv-pure.Dockerfile
          labels: |-
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |-
            ghcr.io/querycap/${{ steps.prepare.outputs.image }}-runtime-arm64
            docker.io/querycap/${{ steps.prepare.outputs.image }}-runtime-arm64